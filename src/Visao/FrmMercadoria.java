/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import BancoDeDados.DatabaseUtilit;
import BancoDeDados.FornecedorDAO;
import BancoDeDados.MercadoriaDAO;
import BancoDeDados.ServicoDAO;
import Modelo.Fornecedor;
import Modelo.Mercadoria;
import Util.Utilitarios;
import Util.MercadoriaComboFornecedor;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Lidia;
 */
public class FrmMercadoria extends javax.swing.JFrame {
    int codMercadoria;
    Utilitarios util;
    MercadoriaDAO mDAO;
    FrmVisualizarMercadoria visualizaMercadoria;
    String operacao;
    int codigoFornecedorAlteracao = -1;
    /**
     * Creates new form FrmMercadoria
     */
    public FrmMercadoria(FrmVisualizarMercadoria form) {
        initComponents();
        util = new Utilitarios();
        mDAO = new MercadoriaDAO();
        this.visualizaMercadoria = form;
        this.setLocationRelativeTo(null);  //centralizar a tela
        setCboFornecedor(); //para inicializar o combobox com os fornecedores
    }
    
    public void controlaBotoes(){
        if("salvar".equals(operacao))
        {
            util.limparCampos(pnlMercadoria);
            btnAlterar.setEnabled(false);
            btnSalvar.setEnabled(true);            
        } else if("alterar".equals(operacao))  {
            btnAlterar.setEnabled(true);
            btnSalvar.setEnabled(false);
        }
    }

    public void setCodigoMercadoriaAlteracao(int codigo)
    {
        this.codMercadoria = codigo;
    }
    
    public void setTxtNome (String nome)
    {
         txtNome.setText(nome);
    }
    
    public void setTxtDescricao (String descricao)
    {
         txtDescricao.setText(descricao);
    }
    
    public void setTxtValor (String valor)
    {
         txtValor.setText(valor);
    }
    
    public void setTxtQuantidade (String quant)
    {
         txtQuantidade.setText(quant);
    }
    
    public void setTxtCodFornecedor (String codForn)
    {
        codigoFornecedorAlteracao = Integer.parseInt(codForn);
        setCboFornecedor();
        recuperaCboFornecedor();
    }
    
    
    
        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMercadoria = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtQuantidade = new javax.swing.JTextField();
        cbbFornecedores = new javax.swing.JComboBox();
        btnSalvar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();

        setTitle("Cadastro de Mercadoria");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pnlMercadoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Mercadoria"));

        jLabel1.setText("Nome:");

        jLabel2.setText("Descrição:");

        jLabel3.setText("Valor: R$");

        jLabel4.setText("Quantidade:");

        jLabel5.setText("Fornecedor:");

        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorKeyTyped(evt);
            }
        });

        txtQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantidadeKeyTyped(evt);
            }
        });

        cbbFornecedores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbFornecedoresActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMercadoriaLayout = new javax.swing.GroupLayout(pnlMercadoria);
        pnlMercadoria.setLayout(pnlMercadoriaLayout);
        pnlMercadoriaLayout.setHorizontalGroup(
            pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMercadoriaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMercadoriaLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addGap(30, 30, 30)
                        .addComponent(cbbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMercadoriaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescricao))
                    .addGroup(pnlMercadoriaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMercadoriaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlterar)
                .addGap(42, 42, 42)
                .addComponent(btnSalvar)
                .addGap(40, 40, 40)
                .addComponent(btnLimpar)
                .addGap(40, 40, 40)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        pnlMercadoriaLayout.setVerticalGroup(
            pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMercadoriaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(pnlMercadoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnLimpar)
                    .addComponent(btnSair)
                    .addComponent(btnAlterar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        util.fecharJanela(this);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        util.limparCampos(pnlMercadoria);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtQuantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeKeyTyped
        util.apenasNumeros(evt);
    }//GEN-LAST:event_txtQuantidadeKeyTyped

    private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
        //Nao está chamando o metodo  apenasNumeros pois é diferente devido ao ponto . 
        String caracteres="0987654321.";
        if(!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_txtValorKeyTyped

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        String nome = txtNome.getText();
        String descricao = txtDescricao.getText();
        //Comandos para pegar o valor selecionado no combobox, ao inves do texto pega a chave primaria
        Object item = cbbFornecedores.getSelectedItem();
        String valueFornecedor = ((MercadoriaComboFornecedor)item).getValue();
        int fornecedor = Integer.parseInt(valueFornecedor); //convertendo de String para int
        
        
        if("".equals(nome) || "".equals(descricao) || "".equals(txtValor.getText()) || txtQuantidade.getText() == "" || "".equals(valueFornecedor))
        {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }
        else {
            Double valor = Double.parseDouble(txtValor.getText());
            int quantidade = Integer.parseInt(txtQuantidade.getText());
            Mercadoria m = new Mercadoria(nome, fornecedor, descricao, valor, quantidade);
            DatabaseUtilit.Conectar();
            mDAO.insereMercadoria(m);
            visualizaMercadoria.refresh();
            JOptionPane.showMessageDialog(null, "Salvo com sucesso");
        }
    //  System.out.println("Seu fornecedor é: "+fornecedor);
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    public void recuperaCboFornecedor()
    {
        FornecedorDAO fDAO = new FornecedorDAO();
        try
        {
            List<Fornecedor> fornecedor = fDAO.listarTodosFornecedoresLike(codigoFornecedorAlteracao);
            for(Fornecedor fornece : fornecedor)
            {  
               String nomeFantasiaAlteracao = fornece.getNomeFantasia();
                
                int achou = 0;
                int i = 0;
                while (achou != 1)
                {
                    cbbFornecedores.setSelectedIndex(i);
                    if (cbbFornecedores.getSelectedItem().toString().equals(nomeFantasiaAlteracao))
                    {
                        cbbFornecedores.setSelectedIndex(i); //seleciona no form o item
                        achou = 1; //achou recebe 1 para sair do while
                    }
                    i++;    
                }
                
            }
        }
        catch(Exception ex)
        {
            //blabla
        }
    }
    
    public void setCboFornecedor()
    {        
        cbbFornecedores.removeAllItems();    
        FornecedorDAO fDAO = new FornecedorDAO();
        //Vector model = new Vector();
        try
        {   
            List<Fornecedor> fornecedor = fDAO.listarTodosFornecedores();
            for(Fornecedor fornece : fornecedor)
            {  
                //model.addElement(new Item(service.getCodigoServico(), service.getDescricaoServico()));
                cbbFornecedores.addItem(new Util.MercadoriaComboFornecedor(fornece.getNomeFantasia(), String.valueOf(fornece.getCodigo())));  
            }
        } 
        catch (Exception ex) 
        {
            //Logger.getLogger(Model.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    private void cbbFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbFornecedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbFornecedoresActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        String nome = txtNome.getText();
        String descricao = txtDescricao.getText();
        //Comandos para pegar o valor selecionado no combobox, ao inves do texto pega a chave primaria
        Object item = cbbFornecedores.getSelectedItem();
        String valueFornecedor = ((MercadoriaComboFornecedor)item).getValue();
        int fornecedor = Integer.parseInt(valueFornecedor); //convertendo de String para int
                
        if("".equals(nome) || "".equals(descricao) || "".equals(txtValor.getText()) || txtQuantidade.getText() == "" || "".equals(valueFornecedor))
        {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }
        else {
            Double valor = Double.parseDouble(txtValor.getText());
            int quantidade = Integer.parseInt(txtQuantidade.getText());
            
            Mercadoria m = new Mercadoria(nome, fornecedor, descricao, valor, quantidade, codMercadoria);
            DatabaseUtilit.Conectar();
          //  MercadoriaDAO mmDAO = new MercadoriaDAO();
            mDAO.updateMercadoria(m);
            visualizaMercadoria.refresh();
            JOptionPane.showMessageDialog(null, "Atualizado com sucesso");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        controlaBotoes(); // contra os botoes de alterar e salvar
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMercadoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new FrmMercadoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbbFornecedores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel pnlMercadoria;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
